package kr.co.hana.consult.handler;

import java.util.ArrayList;
import java.util.List;

import org.springframework.web.socket.CloseStatus;
import org.springframework.web.socket.TextMessage;
import org.springframework.web.socket.WebSocketSession;
import org.springframework.web.socket.handler.TextWebSocketHandler;

import kr.co.hana.login.vo.LoginVO;


public class ConsultHandler extends TextWebSocketHandler {

	private List<WebSocketSession> sessionList;
	
	public ConsultHandler() {
		sessionList = new ArrayList<WebSocketSession>();
		
	}
	
	
	/**
	 * �ش� �������� ������ Ŭ���̾�Ʈ ���� �� Ŭ���̾�Ʈ ������ sessionList�� �߰�
	 */
	@Override
	public void afterConnectionEstablished(WebSocketSession session) throws Exception {
		//System.out.println("afterConnectionEstablished");
		
		LoginVO login = (LoginVO) session.getAttributes().get("loginVO");
		System.out.println(login);
		sessionList.add(session);
	}
	
	/**
	 * ������ ������ �޽��� ���۽� �� �޼ҵ� ȣ��
	 * ���� �� ���ϼ����� ������ Session��ο��� �޽��� ���� = loop�� ���� �޽��� ����
	 */
	@Override
	protected void handleTextMessage(WebSocketSession session, TextMessage message) throws Exception {
		for(WebSocketSession sess: sessionList) {
			//System.out.println("handleTextMessage" + message);
			// session.getId()+": "+
			sess.sendMessage( new TextMessage( session.getId()+":"+message.getPayload()));				
			
		}
	}
	
	/**
	 * Ŭ���̾�Ʈ�� ä�� �����ϸ� remove�� �ش� ���� ����
	 */
	@Override
	public void afterConnectionClosed(WebSocketSession session, CloseStatus status) throws Exception {
		sessionList.remove(session);
	}
	

}
