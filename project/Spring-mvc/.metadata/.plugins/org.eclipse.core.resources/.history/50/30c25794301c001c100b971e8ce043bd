package kr.co.hana.dashboard.service;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import kr.co.hana.dashboard.dao.DashboardDAO;
import kr.co.hana.dashboard.vo.DownloadFileVO;
import kr.co.hana.dashboard.vo.UserCreditVO;
import kr.co.hana.dashboard.vo.UserDashBoardVO;

@Service
public class DashboardServiceImpl implements DashboardService {
	
	@Autowired
	private DashboardDAO dashboarddao;
	
	
	public List<UserDashBoardVO> getUsers(String managerid){
		List<UserDashBoardVO> result = dashboarddao.getUsers(managerid);
		return result;
	}
	
	
	/**
	 * 집계
	 */
	public Map<String, Integer> getUserCnt(String managerid){
		List<UserDashBoardVO> userList = getUsers(managerid);
		Map<String, Integer> userinfo = new HashMap<String, Integer>();
		int reject = 0;
		int reviewing = 0;
		int approve = 0;
		for(int i = 0; i<userList.size(); i++) {
			String status = userList.get(i).getStatus();
			if(status.equals("심사중")) {
				reviewing++;
			}else if(status.equals("대출승인")) {
				approve++;
			}else if(status.equals("대출거절")) {
				reject++;
			}
		}
		userinfo.put("total", userList.size());
		userinfo.put("reject", reject);
		userinfo.put("reviewing", reviewing);
		userinfo.put("approve", approve);
		
		
		return userinfo;
	}


	/**
	 * 파일가져오기
	 */
	public List<DownloadFileVO> getFiles(int contractcode) {
		List<DownloadFileVO> result = dashboarddao.getFiles(contractcode);
		return result;
	}

	/**
	 * 대출승인,거절 업데이트
	 */
	public int statusUpdate(UserDashBoardVO dashinfo) {
		int result = dashboarddao.statusUpdate(dashinfo);
		return result;
	}
	
	/**
	 * Flask API 값 가져오기
	 */
	public UserCreditVO getUserCredit(String id) throws IOException, ParseException {
		UserCreditVO result = new UserCreditVO();

		StringBuilder urlBuilder = new StringBuilder("http://15.165.15.75:5000/credit_auth_info/"); /*URL*/
        urlBuilder.append(URLEncoder.encode("onehana","UTF-8") );
		//StringBuilder urlBuilder = new StringBuilder();
		if(urlBuilder.toString().equals("")) {
			return null;
		}else {
			URL url = new URL(urlBuilder.toString());
			System.out.println(url.toString());
			HttpURLConnection conn = (HttpURLConnection) url.openConnection();
			conn.setRequestMethod("GET");
			conn.setRequestProperty("Content-type", "application/json;utf-8");
			//System.out.println("Response code: " + conn.getResponseCode());
			BufferedReader rd;
			if(conn.getResponseCode() >= 200 && conn.getResponseCode() <= 300) {
				rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));
			} else {
				rd = new BufferedReader(new InputStreamReader(conn.getErrorStream()));
			}
			StringBuilder sb = new StringBuilder();
			String line;
			while ((line = rd.readLine()) != null) {
				sb.append(line);
			}
			rd.close();
			conn.disconnect();
			
			String res = sb.toString();
			System.out.println("값 : "+res);
			
			JSONParser parser = new JSONParser();
			Object obj = parser.parse( res );
			JSONObject jsonObj = (JSONObject) obj;
			System.out.println(jsonObj.toString());
			JSONObject workObj = (JSONObject) jsonObj.get("재직증명서");
			
			Long workyear = (Long) workObj.get("근속년수");
			String companynm = (String)workObj.get("기업명");
			String stockyn = (String)workObj.get("상장여부");
			String job = (String)workObj.get("직업");
			
			
			JSONObject insurObj = (JSONObject) jsonObj.get("4대보험 가입 여부");
			Long health = (Long) insurObj.get("건강보험");
			Long people = (Long) insurObj.get("국민연금");
			Long hired = (Long) insurObj.get("고용보험");
			Long industrial = (Long) insurObj.get("산재보험");
			
			String tax = (String) jsonObj.get("세금납세이행여부");
			
			
		
			result.setWorkyear(workyear);
			result.setCompanynm(companynm);
			result.setStockyn(stockyn);
			result.setJob(job);
			result.setHealth_insurance(health);
			result.setPeople_insurance(people);
			result.setHired_insurance(hired);
			result.setIndustrial_insurance(industrial);
			result.setTax_status(tax);
			
			return result;
		}
		

		
		
	}

	
	
}
