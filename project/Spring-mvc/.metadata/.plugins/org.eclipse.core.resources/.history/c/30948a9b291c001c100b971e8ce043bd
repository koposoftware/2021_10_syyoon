package homeonehana.api;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;

import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = { "classpath:config/spring/spring-mvc.xml" })
public class APITest {
	
	@Test
	public void test1() throws IOException, ParseException {
			
			
			StringBuilder urlBuilder = new StringBuilder("http://15.165.15.75:5000/credit_auth_info/"); /*URL*/
	        urlBuilder.append(URLEncoder.encode("onehana","UTF-8") );
			//StringBuilder urlBuilder = new StringBuilder();
			if(urlBuilder.toString().equals("")) {
				System.out.println("hi");
			}else {
				URL url = new URL(urlBuilder.toString());
				System.out.println(url.toString());
				HttpURLConnection conn = (HttpURLConnection) url.openConnection();
				conn.setRequestMethod("GET");
				conn.setRequestProperty("Content-type", "application/json;utf-8");
				//System.out.println("Response code: " + conn.getResponseCode());
				BufferedReader rd;
				if(conn.getResponseCode() >= 200 && conn.getResponseCode() <= 300) {
					rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));
				} else {
					rd = new BufferedReader(new InputStreamReader(conn.getErrorStream()));
				}
				StringBuilder sb = new StringBuilder();
				String line;
				while ((line = rd.readLine()) != null) {
					sb.append(line);
				}
				rd.close();
				conn.disconnect();
				
				String res = sb.toString();
				System.out.println("값 : "+res);
				
				JSONParser parser = new JSONParser();
				Object obj = parser.parse( res );
				JSONObject jsonObj = (JSONObject) obj;
				System.out.println(jsonObj.toString());
				JSONObject workObj = (JSONObject) jsonObj.get("재직증명서");
				Long workyear = (Long) workObj.get("근속년수");
				String companynm = (String)workObj.get("기업명");
				String stockyn = (String)workObj.get("상장여부");
				String job = (String)workObj.get("직업");
				
				System.out.println(workObj.toString());
				System.out.println(workyear);
				
				
			}
	        
	}
}
